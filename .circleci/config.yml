# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    
    steps:
      - checkout
      - setup_remote_docker
      
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
        
      # run tests
      - run: gradle build
      
      # run tests
      - run: gradle test
      
      - run:
          name: sonar scanner
          command: |
            if[ $localbuild == true ] then 
              gradle sonarqube \
              -Dsonar.organization=brunonascimento-github \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=5d914a25f7c12cc71dc417f96f2cf926eeb53d0a+ 
            else 
              echo "not running local" 
            fi  
      
      - run:
          name: setup docker env
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
      
      - run:
          name: docker build
          command: |
           docker build -t brunonasc/app:$CIRCLE_BRANCH .
           
      - run:
          name: docker push
          command: |
           docker push brunonasc/app:$CIRCLE_BRANCH
